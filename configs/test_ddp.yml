data:
  test:
    module: ignite.distributed.auto
    name: auto_dataloader
    kwargs:
      dataset:
        module: datasets.nuscenes_dataset
        name: NuScenesDataset
        kwargs:
          version: "'v1.0-mini'"
          dataroot: "'../../datasets/nuscenes_mini'"
          cam_names:
            - "'CAM_FRONT'"
            - "'CAM_FRONT_LEFT'"
            - "'CAM_FRONT_RIGHT'"
            - "'CAM_BACK_LEFT'"
            - "'CAM_BACK_RIGHT'"
            - "'CAM_BACK'"
          verbose: True
          token_list_file: "'datasets/file_lists/nuscenes/mini_train.txt'"
          mask_dir: "'datasets/masks/nuscenes'"
          image_shape: (640, 352)
          jittering: (0.0, 0.0, 0.0, 0.0)
          ref_extrinsic_idx: 0
      shuffle: False
      batch_size: 8
      num_workers: 16

model:
  module: ignite.distributed.auto
  name: auto_model
  kwargs:
    model:
      module: models.vf_depth
      name: VFDepth
    sync_bn: True

engine:
  module: flame.engine
  name: Evaluator.factory
  kwargs:
    model: model
    data: data.test
    device: "'cuda'"
    prepare_batch: prepare_batch
    model_fn: >
      lambda model, x: model(
        x[7], # prev_image
        x[8], # cur_image
        x[9], # next_image
        x[3], # mask
        x[4], # intrinsic
        x[5], # extrinsic
        x[6], # ref_extrinsic
      )

launcher:
  module: ignite.distributed
  name: Parallel
  kwargs:
    backend: "'nccl'"
    nproc_per_node: 2
    nnodes: null
    node_rank: null
    master_addr: null
    master_port: null

loss_fn:
  module: flame.loss
  name: Loss
  kwargs:
    loss_fn:
      module: losses.loss_computation_wrapper
      name: LossComputationWrapper
      kwargs:
        model: model.module
        loss_fn:
          module: losses.multi_cam_loss
          name: MultiCamLoss
          kwargs:
            disparity_smoothness: 0.001
            spatio_coeff: 0.03
            spatio_tempo_coeff: 0.1
        max_depth: 80.0
        min_depth: 1.5
        focal_length_scale: 300.0
        neighbor_cam_indices_map:
          0: [1,2]
          1: [0,3]
          2: [0,4]
          3: [1,5]
          4: [2,5]
          5: [3,4]
    output_transform: >
      lambda output: (
        output[1][0], # org_prev_images
        output[1][1], # org_cur_images
        output[1][2], # org_next_images
        output[1][3], # masks
        output[0][2], # depth_maps
        output[1][4], # intrinsics
        output[1][5], # extrinsics
        output[0][0], # prev_to_cur_poses
        output[0][1], # next_to_cur_poses
      )

metrics:
  module: flame.handlers
  name: Metrics
  kwargs:
    evaluators:
      - engine
    metrics:
      loss:
        module: metrics.loss
        name: Loss
        kwargs:
          loss_fn: loss_fn

visualization:
  module: handlers.visualizer
  name: Visualizer
  kwargs:
    trainer: engine
    evaluator: engine
    out_dir: "'output/vis'"
    out_name: "'mini_train'"
    # out_resolution: (1472, 1080)
    out_resolution: (1928, 1414)
    fps: 2
    file_ext: "'mp4'"
    fourcc: "'mp4v'"
    grid_nrow: 3
    output_transform: 'lambda x: (x[0][2], x[1][1])'

logging:
  progress_bar:
    module: flame.handlers
    name: ProgressBar
    kwargs:
      evaluators:
        test: engine
      metric_names:
        - "'total_loss'"

  tensorboard:
    module: flame.handlers
    name: Tensorboard
    kwargs:
      log_dir: "'logs/'"
      logger_handlers:
        - engine: engine
          event_name: Events.EPOCH_COMPLETED
          log_handler:
            module: ignite.contrib.handlers.tensorboard_logger
            name: OutputHandler
            kwargs:
              tag: "'evaluation/test'"
              metric_names:
                - "'total_loss'"
                - "'reproj_loss'"
                - "'spatio_loss'"
                - "'spatio_tempo_loss'"
                - "'smooth_loss'"
              global_step_transform: global_step_from_engine(engine, Events.EPOCH_COMPLETED)

checkpoint:
  loader:
    module: flame.handlers
    name: CheckpointLoader
    kwargs:
      path: "'checkpoints/weights/vfdepth.pt'"

extralibs:
  prepare_batch:
    module: datasets.utils
    name: prepare_batch
  Events:
    module: ignite.engine
    name: Events
  global_step_from_engine:
    module: ignite.handlers
    name: global_step_from_engine
